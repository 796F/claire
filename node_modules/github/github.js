/*
  Module contains 
    custom Github API client library
    scraper routine
    Models for different types of data
    schema for database
    data layer for communication with db 
*/

Github = {};

var EventStream = require('./EventStream.js');


Github.run = function(options) {
  //init database and proxy
  var db_connector = options.db_connector;
  var proxy_factory = options.proxy_factory;
  //initiate the event stream with the client information.
  EventStream.init(options.github_auth);
  //start the event listener, use it to drive everything else
  EventStream.pollEvents()
  .then(_resolve, _error, function(ev){
    //ev is a new event.  
    
  });
}

function _resolve(value){
  //this should never happen
  console.log('RESOLVED - EVENT STREAM PROMISE', value);
  throw new Error('RESOLVED - EVENT STREAM PROMISE', value);
}

function _error(err){
  console.log('ERROR - EVENT STREAM PROMISE', err);
  throw err;
}


module.exports = Github;
